/* Page Container */
.pageContainer {
  display: flex;
  height: var(--full-height); /* Uses fallback system from layout tokens */
  width: 100%;
}

/* Sidebar (Desktop) */
.sidebar {
  width: var(--sidebar-width);
  min-height: var(--full-height);
  background: var(--color-bg-sidebar);
  color: var(--color-text-white-light);
  padding: var(--sidebar-padding);
  display: flex;
  flex-direction: column;
  gap: var(--container-gap);
  overflow-y: auto;
}

/* Project Title */
.projectTitle {
  font-size: var(--font-size-title);
  font-weight: var(--font-weight-bold);
  text-align: center;
}

.titleButton {
  background: none;
  border: none;
  color: var(--color-text-white-light);
  font-size: inherit;
  font-weight: inherit;
  cursor: pointer;
  padding: 0;
  text-decoration: none;
  transition: opacity var(--transition-fast);

  /* Centralizar texto */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: 100%;
}

.titleButton:hover {
  opacity: 0.8;
  /* Não ficará azul - mantém cor original */
  color: var(--color-text-white-light);
}

.titleButton:focus {
  outline: none;
  /* Foco customizado sem azul */
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
}

/* Game Content */
.gameContent {
  display: flex;
  flex-direction: column;
  gap: var(--container-gap);
}

.subtitle {
  font-size: var(--font-size-subtitle);
  font-weight: var(--font-weight-semibold);
  text-align: center;
  line-height: var(--line-height-normal);
}

.gameControls1,
.gameControls2 {
  display: flex;
  flex-direction: column;
  gap: var(--container-gap);
}

.paintModePanel,
.zoomPanel {
  display: flex;
  flex-direction: column;
  gap: var(--component-gap);
  justify-content: center;
}

.sectionTitle {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold);
  margin: 0;
  color: var(--color-text-white-muted);
}

/* Room Info */
.roomInfo {
  background: var(--color-gray-700);
  border-radius: var(--radius-lg);
  padding: var(--card-padding);
  margin-top: var(--container-gap);
}

.roomTitle {
  font-weight: var(--font-weight-semibold);
  margin-bottom: var(--component-gap);
}

.roomLink {
  font-size: var(--font-size-sm);
  color: var(--color-text-white-muted);
  word-break: break-all;
  margin-bottom: var(--container-gap);
}

.copyButtonWrapper {
  position: relative;
}

.copyButton {
  background: var(--color-primary);
  color: var(--color-text-white-inverse);
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  cursor: pointer;
  font-size: var(--font-size-sm);
  transition: var(--transition-fast);
}

.copyButton:hover {
  background: var(--color-primary-dark);
}

/* Players */
.playersContainer {
  margin-top: var(--spacing-md);
}

.playersTitle {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold);
  margin: 0 0 var(--spacing-sm) 0;
  color: var(--color-text-white-light);
}

.playersList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.playerCard {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm);
  background: var(--color-bg-secondary);
  border-radius: var(--radius-sm);
}

.playerColor {
  width: var(--player-indicator-size);
  height: var(--player-indicator-size);
  border-radius: 50%;
  flex-shrink: 0;
}

.playerInfo {
  display: flex;
  align-items: center;
  gap: var(--component-gap);
  flex: 1;
}

.playerName {
  font-size: var(--font-size-sm);
}

.creatorBadge {
  background: var(--color-error);
  color: var(--color-white);
  font-size: var(--font-size-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-sm);
  font-weight: var(--font-weight-semibold);
}

/* Page Content Area */
.pageContentArea {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: var(--color-brand-gradient);
  overflow: hidden;
  font-family: var(--font-family-primary);
}

.pageContent {
  max-width: 1200px;
  margin: auto;
  padding: var(--spacing-xl);
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Nonogram Container Area (for GamePage) */
.nonogramContainerArea {
  display: flex;
  flex-direction: column;
  background: var(--color-bg-game-area);
  overflow: hidden;
  font-family: var(--font-family-primary);
  align-items: center;
  overflow: auto;
  height: var(--full-height);
  width: calc(100vw - var(--sidebar-width));
}

.nonogramContainer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: var(--spacing-md);
  padding: var(--spacing-md);
  box-sizing: border-box;
  overflow: auto;
  position: relative;
}

.hamburgerButton,
.closeButton {
  background: var(--color-glass-bg);
  color: white;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-weight: bold;
  transition: background-color 0.2s ease;
  aspect-ratio: 1 / 1;
  min-width: 2.5em;
  min-height: 2.5em;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
}

.hamburgerButton,
.closeButton {
  font-size: 1.2rem;
  top: 50%;
  transform: translateY(-50%);
  right: 5vw;
}

.hamburgerButton:hover,
.closeButton:hover {
  background: var(--color-glass-bg-strong);
}

/* Mobile Styles */
.mobileTopBar {
  height: 10vh;
  height: 10dvh; /* Dynamic viewport height */
  background: var(--color-brand-gradient);
  color: var(--color-gray-50);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  position: relative;
  flex-shrink: 0; /* Prevent shrinking */
  z-index: var(--z-sticky);
}

.topBarExpanded {
  background: var(--color-brand-gradient);
  color: var(--color-text-white-inverse);
  padding: var(--spacing-md);
  height: 90vh;
  height: 90dvh; /* Dynamic viewport height */
  overflow-y: auto;
  border-bottom: var(--border-width-thin) solid var(--color-glass-border);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.mobileBottomBar {
  height: 15vh;
  height: 15dvh; /* Dynamic viewport height */
  background: var(--color-brand-gradient);
  color: var(--color-text-white-inverse);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 var(--spacing-md);
  box-shadow: 0 -2px 10px var(--color-shadow-light);
  z-index: var(--z-sticky);
  flex-shrink: 0; /* Prevent shrinking */
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-shadow-overlay);
  z-index: var(--z-overlay);
}

/* Toggle Button Panel */
.toggleButton {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .pageContainer {
    flex-direction: column;
    height: 100vh;
    height: 100dvh; /* Dynamic viewport height for mobile */
  }

  .sidebar {
    display: none;
  }

  .pageContent {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .gameControls2 {
    flex-direction: row;
  }

  .nonogramContainerArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    width: 100vw;
    overflow: auto; /* Changed from hidden to auto to allow scrolling */
    height: auto; /* Let flex handle the height */
  }

  .nonogramContainer {
    flex: 1;
    width: 100%;
    overflow: visible; /* Grid itself should not scroll, let parent handle it */
    padding: var(--spacing-sm);
  }
}

/* Responsive adjustments */
@media (min-width: 769px) {
  .mobileTopBar,
  .topBarExpanded,
  .mobileBottomBar,
  .overlay {
    display: none;
  }
}

/* Mobile responsiveness for create form */
@media (max-width: 480px) {
  .mobileCreateForm {
    padding: var(--spacing-md);
    gap: var(--spacing-lg);
  }

  .formTitle {
    font-size: var(--font-size-xl);
  }

  .label {
    font-size: var(--font-size-md);
  }

  .colorGrid {
    gap: 0.75rem;
  }

  .colorButton {
    width: 44px;
    height: 44px;
  }

  .createButton {
    padding: 0.875rem 1.5rem;
    font-size: 0.95rem;
  }
}

/* Mobile Create Room Form */
.mobileCreateForm {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1.5rem;
  height: 100%;
}

.formTitle {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
  text-align: center;
  color: white;
  text-shadow: var(--shadow-text-sm);
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.label {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-medium);
  color: white;
  text-shadow: var(--shadow-text-sm);
}

.input {
  padding: var(--spacing-md);
  border: var(--border-width-thin) solid var(--color-glass-border);
  border-radius: var(--radius-md);
  background: var(--color-glass-bg-hover);
  color: white;
  font-size: var(--font-size-input);
  backdrop-filter: blur(10px);
  transition: var(--transition-fast);
  box-sizing: border-box;
}

.input:focus {
  outline: none;
  border-color: var(--color-glass-border-hover);
  background: var(--color-glass-bg-active);
  box-shadow: 0 0 0 3px var(--color-glass-shadow);
}

.input::placeholder {
  color: var(--color-glass-text);
}

.colorGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
  justify-items: center;
  margin-top: 0.5rem;
}

.colorButton {
  width: var(--button-size-lg);
  height: var(--button-size-lg);
  border-radius: 50%;
  border: var(--border-width-medium) solid transparent;
  cursor: pointer;
  transition: var(--transition-fast);
  position: relative;
}

.colorButton:hover:not(:disabled) {
  transform: scale(1.1);
  box-shadow: var(--shadow-lg);
}

.colorButton.selected {
  border-color: white;
  box-shadow: 0 0 0 2px var(--color-glass-border-active);
  transform: scale(1.15);
}

.createButton {
  padding: var(--spacing-lg) var(--spacing-xl);
  border: var(--border-width-thin) solid var(--color-glass-border);
  border-radius: var(--radius-md);
  background: var(--color-glass-bg);
  backdrop-filter: var(--glass-backdrop-blur);
  color: white;
  font-size: var(--font-size-base);
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition-fast);
  margin-top: var(--spacing-lg);
}

.createButton:hover:not(:disabled) {
  background: var(--color-glass-bg-active);
  transform: var(--transform-hover-lift);
  box-shadow: var(--shadow-lg);
}

.createButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.error {
  background: var(--color-error-glassmorphism);
  border: var(--border-width-thin) solid var(--color-error-border);
  color: var(--color-error-light);
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  text-align: center;
}

.error p {
  margin: 0;
}

/* Mobile Clear Grid Form */
.mobileClearForm {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 2rem 1.5rem;
  height: 100%;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.clearMessage {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.clearMessage p {
  margin: 0;
  font-size: var(--font-size-lg);
  line-height: 1.6;
  color: white;
  text-shadow: var(--shadow-text-sm);
}

.clearActions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  width: 100%;
  max-width: 300px;
}

.clearCancelButton,
.clearConfirmButton {
  flex: 1;
  padding: var(--spacing-lg) var(--spacing-xl);
  border: var(--border-width-thin) solid var(--color-glass-border);
  border-radius: var(--radius-md);
  font-size: var(--font-size-base);
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition-fast);
  backdrop-filter: var(--glass-backdrop-blur);
  text-shadow: var(--shadow-text-sm);
}

.clearCancelButton {
  background: var(--color-glass-bg);
  color: white;
}

.clearCancelButton:hover {
  background: var(--color-glass-bg-active);
  transform: var(--transform-hover-lift);
  box-shadow: var(--shadow-lg);
  border-color: var(--color-glass-border-active);
}

.clearConfirmButton {
  background: var(--color-error-glassmorphism);
  color: white;
  border-color: var(--color-error-border);
}

.clearConfirmButton:hover {
  background: var(--color-danger);
  border-color: var(--color-danger);
  transform: var(--transform-hover-lift);
  box-shadow: 0 8px 25px var(--color-error-glassmorphism);
}
